/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LeveragedPool, LeveragedPoolInterface } from "../LeveragedPool";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "FeeAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "GovernanceAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "KeeperAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "longToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "shortToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "poolName",
        type: "string",
      },
    ],
    name: "PoolInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "shortBalanceChange",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "longBalanceChange",
        type: "int256",
      },
    ],
    name: "PoolRebalance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "startPrice",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "int256",
        name: "endPrice",
        type: "int256",
      },
    ],
    name: "PriceChangeError",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "ProvisionalGovernanceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "_shortBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_longBalance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "burner",
        type: "address",
      },
    ],
    name: "burnTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frontRunningInterval",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOraclePrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUpkeepInformation",
    outputs: [
      {
        internalType: "int256",
        name: "_latestPrice",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_lastPriceTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_updateInterval",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceTransferInProgress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "_owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "_keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "_oracleWrapper",
            type: "address",
          },
          {
            internalType: "address",
            name: "_settlementEthOracle",
            type: "address",
          },
          {
            internalType: "address",
            name: "_longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "_shortToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "_poolCommitter",
            type: "address",
          },
          {
            internalType: "string",
            name: "_poolName",
            type: "string",
          },
          {
            internalType: "uint32",
            name: "_frontRunningInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "_updateInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "_fee",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "_leverageAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "_feeAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "_quoteToken",
            type: "address",
          },
        ],
        internalType: "struct ILeveragedPool.Initialization",
        name: "initialization",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "intervalPassed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPriceTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "leverageAmount",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "longBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "mintTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleWrapper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payKeeperFromBalances",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "poolCommitter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolTokens",
    outputs: [
      {
        internalType: "address[2]",
        name: "",
        type: "address[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_oldPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_newPrice",
        type: "int256",
      },
    ],
    name: "poolUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "provisionalGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quoteToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "quoteTokenTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "quoteTokenTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
    ],
    name: "setKeeper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_longBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_shortBalance",
        type: "uint256",
      },
    ],
    name: "setNewPoolBalances",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "settlementEthOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shortBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    name: "transferGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "updateFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateInterval",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawQuote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612c4a806100206000396000f3fe608060405234801561001057600080fd5b506004361061023d5760003560e01c80637bbf10331161013b578063b9ed8abf116100b8578063ddca3f431161007c578063ddca3f43146104de578063f164e2a7146104f2578063f3466dfa14610506578063f633a7401461051b578063fd2c80ae1461052e57600080fd5b8063b9ed8abf14610489578063ba8d54681461049c578063bbcaac38146104a5578063cd39f30f146104b8578063d38bfff4146104cb57600080fd5b80638456cb59116100ff5780638456cb591461042257806387f9ca5d1461042a5780639fd552451461043d578063ab47c2b314610450578063aced16611461047657600080fd5b80637bbf1033146103d05780637bfe789a146103d85780637de93f93146103fd5780637e71fc7d146104065780638226f3961461040f57600080fd5b80635aa6e675116101c9578063748747e61161018d578063748747e61461036657806375c66e2f14610379578063796da7af1461038c5780637b0a0c90146103a25780637bb98a68146103b557600080fd5b80635aa6e675146102ff5780635c975abb146103125780635d36b190146103365780636d3e313e1461033e5780636dc2b2711461035357600080fd5b80633f4ba83a116102105780633f4ba83a146102ab57806341275358146102b35780634f64b2be146102c6578063554bb621146102d95780635817f0c6146102ec57600080fd5b806304883c2714610242578063217a4b70146102635780633c3f82521461028e5780633d4c485d146102a3575b600080fd5b61024a610546565b60405161025a94939291906129d2565b60405180910390f35b600a54610276906001600160a01b031681565b6040516001600160a01b03909116815260200161025a565b6102a161029c3660046127c8565b6105f9565b005b6102a1610661565b6102a1610771565b600954610276906001600160a01b031681565b6102766102d436600461284a565b6107d3565b6102a16102e73660046127ea565b6107f3565b6102a16102fa366004612680565b611183565b600754610276906001600160a01b031681565b60105461032690600160a81b900460ff1681565b604051901515815260200161025a565b6102a1611244565b610346611382565b60405161025a9190612998565b610326610361366004612680565b6113c6565b6102a1610374366004612629565b611590565b6102a1610387366004612887565b611697565b610394611877565b60405190815260200161025a565b6102a16103b0366004612644565b6118f9565b6001546002546040805192835260208301919091520161025a565b610326611a11565b6003546103e89063ffffffff1681565b60405163ffffffff909116815260200161025a565b610394600c5481565b61039460025481565b600f54610276906001600160a01b031681565b6102a1611a3b565b6102a1610438366004612887565b611aa3565b601054610276906001600160a01b031681565b60045461045d9060801b81565b6040516001600160801b0319909116815260200161025a565b600854610276906001600160a01b031681565b600e54610276906001600160a01b031681565b61039460015481565b6102a16104b3366004612629565b611c7e565b600b54610276906001600160a01b031681565b6102a16104d9366004612629565b611d7a565b60035461045d90600160401b900460801b81565b60105461032690600160a01b900460ff1681565b61050e611e89565b60405161025a91906129fe565b6102a16105293660046127c8565b611f17565b6003546103e890640100000000900463ffffffff1681565b60006060600080600e60009054906101000a90046001600160a01b03166001600160a01b031663db6d8fcf6040518163ffffffff1660e01b815260040160006040518083038186803b15801561059b57600080fd5b505afa1580156105af573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105d7919081019061270f565b600c546003549297919650945064010000000090910463ffffffff1692509050565b600b546001600160a01b0316331461062c5760405162461bcd60e51b815260040161062390612a39565b60405180910390fd5b601054600160a81b900460ff16156106565760405162461bcd60e51b815260040161062390612a11565b600291909155600155565b6007546001600160a01b0316331461068b5760405162461bcd60e51b815260040161062390612a70565b601054600160a81b900460ff166106d35760405162461bcd60e51b815260206004820152600c60248201526b506f6f6c206973206c69766560a01b6044820152606401610623565b600a546040516370a0823160e01b81523060048201526001600160a01b039091169060009082906370a082319060240160206040518083038186803b15801561071b57600080fd5b505afa15801561072f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075391906126f6565b600a5490915061076d906001600160a01b03163383612061565b5050565b6007546001600160a01b0316331461079b5760405162461bcd60e51b815260040161062390612a70565b6010805460ff60a81b191690556040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a1565b600581600281106107e357600080fd5b01546001600160a01b0316905081565b600054610100900460ff1661080e5760005460ff1615610812565b303b155b6108755760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610623565b600054610100900460ff16158015610897576000805461ffff19166101011790555b60006108ab6101a084016101808501612629565b6001600160a01b031614156109025760405162461bcd60e51b815260206004820152601f60248201527f46656520616464726573732063616e6e6f7420626520302061646472657373006044820152606401610623565b60006109166101c084016101a08501612629565b6001600160a01b0316141561096d5760405162461bcd60e51b815260206004820152601f60248201527f51756f746520746f6b656e2063616e6e6f7420626520302061646472657373006044820152606401610623565b600061097f6060840160408501612629565b6001600160a01b031614156109e15760405162461bcd60e51b815260206004820152602260248201527f4f7261636c6520777261707065722063616e6e6f742062652030206164647265604482015261737360f01b6064820152608401610623565b60006109f36080840160608501612629565b6001600160a01b03161415610a545760405162461bcd60e51b815260206004820152602160248201527f4b6565706572206f7261636c652063616e6e6f742062652030206164647265736044820152607360f81b6064820152608401610623565b6000610a636020840184612629565b6001600160a01b03161415610aba5760405162461bcd60e51b815260206004820152601960248201527f4f776e65722063616e6e6f7420626520302061646472657373000000000000006044820152606401610623565b6000610acc6040840160208501612629565b6001600160a01b03161415610b235760405162461bcd60e51b815260206004820152601a60248201527f4b65657065722063616e6e6f74206265203020616464726573730000000000006044820152606401610623565b6000610b3560a0840160808501612629565b6001600160a01b03161415610b8c5760405162461bcd60e51b815260206004820152601e60248201527f4c6f6e6720746f6b656e2063616e6e6f742062652030206164647265737300006044820152606401610623565b6000610b9e60c0840160a08501612629565b6001600160a01b03161415610bf55760405162461bcd60e51b815260206004820152601f60248201527f53686f727420746f6b656e2063616e6e6f7420626520302061646472657373006044820152606401610623565b6000610c0760e0840160c08501612629565b6001600160a01b03161415610c685760405162461bcd60e51b815260206004820152602160248201527f506f6f6c436f6d6d69747465722063616e6e6f742062652030206164647265736044820152607360f81b6064820152608401610623565b610c7a610140830161012084016128ea565b63ffffffff16610c92610120840161010085016128ea565b63ffffffff1610610ce55760405162461bcd60e51b815260206004820152601d60248201527f66726f6e7452756e6e696e67203e20757064617465496e74657276616c0000006044820152606401610623565b610cf8670de0b6b3a76400006001612b0d565b82610140013510610d395760405162461bcd60e51b815260206004820152600b60248201526a466565203e3d203130302560a81b6044820152606401610623565b610d466020830183612629565b600780546001600160a01b0319166001600160a01b0392909216919091179055610d766040830160208401612629565b600880546001600160a01b0319166001600160a01b0392909216919091179055610da66060830160408401612629565b600e80546001600160a01b0319166001600160a01b0392909216919091179055610dd66080830160608401612629565b600f80546001600160a01b0319166001600160a01b0392909216919091179055610e086101c083016101a08401612629565b600a80546001600160a01b0319166001600160a01b0392909216919091179055610e3a610120830161010084016128ea565b6003805463ffffffff191663ffffffff92909216919091179055610e66610140830161012084016128ea565b6003805463ffffffff929092166401000000000267ffffffff0000000019909216919091179055604051636fedf26d60e11b8152610140830135600482015273__$302363119e071fbaa0549b1c7d65b3ce22$__9063dfdbe4da9060240160206040518083038186803b158015610edc57600080fd5b505af4158015610ef0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1491906126cc565b6003805460809290921c600160401b0277ffffffffffffffffffffffffffffffff00000000000000001990921691909117905573__$302363119e071fbaa0549b1c7d65b3ce22$__63dfdbe4da610f7361018085016101608601612826565b6040516001600160e01b031960e084901b16815261ffff909116600482015260240160206040518083038186803b158015610fad57600080fd5b505af4158015610fc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe591906126cc565b600480546001600160801b03191660809290921c9190911790556110116101a083016101808401612629565b600980546001600160a01b0319166001600160a01b039290921691909117905542600c5561104260e0830183612aa7565b61104e91600d91612556565b5061105f60a0830160808401612629565b600560000180546001600160a01b0319166001600160a01b039290921691909117905561109260c0830160a08401612629565b600560010180546001600160a01b0319166001600160a01b03929092169190911790556110c560e0830160c08401612629565b600b80546001600160a01b0319166001600160a01b03929092169190911790556110f560c0830160a08401612629565b6001600160a01b031661110e60a0840160808501612629565b6001600160a01b03167fbc8bd61e5dd69ff5cb8c389529c029503515ba368eaafbdaa406e072fdd3607261114a6101c086016101a08701612629565b61115760e0870187612aa7565b60405161116693929190612958565b60405180910390a3801561076d576000805461ff00191690555050565b600b546001600160a01b031633146111ad5760405162461bcd60e51b815260040161062390612a39565b601054600160a81b900460ff16156111d75760405162461bcd60e51b815260040161062390612a11565b6001600160a01b03821661122d5760405162461bcd60e51b815260206004820152601e60248201527f546f20616464726573732063616e6e6f742062652030206164647265737300006044820152606401610623565b600a5461076d906001600160a01b03168383612061565b601054600160a81b900460ff161561126e5760405162461bcd60e51b815260040161062390612a11565b601054600160a01b900460ff166112c75760405162461bcd60e51b815260206004820152601b60248201527f4e6f20676f7665726e616e6365206368616e67652061637469766500000000006044820152606401610623565b6010546001600160a01b031633146113215760405162461bcd60e51b815260206004820152601860248201527f4e6f742070726f766973696f6e616c20676f7665726e6f7200000000000000006044820152606401610623565b60078054601080546001600160a01b038082166001600160a01b03198516811790955560ff60a01b199091169091556040519116919082907f023588d3d1dcaad34e471c9e01b616b794156174bc693539c8fe15c0bfd5d82690600090a350565b61138a6125da565b60408051808201918290529060059060029082845b81546001600160a01b0316815260019091019060200180831161139f575050505050905090565b6008546000906001600160a01b0316331461141b5760405162461bcd60e51b815260206004820152601560248201527436b9b39739b2b73232b9103737ba1035b2b2b832b960591b6044820152606401610623565b601054600160a81b900460ff16156114455760405162461bcd60e51b815260040161062390612a11565b6001600160a01b0383166114a55760405162461bcd60e51b815260206004820152602160248201527f52656365697069656e7420616464726573732063616e6e6f74206265206e756c6044820152601b60fa1b6064820152608401610623565b6001546002546114b58183612af5565b84106114c65760009250505061158a565b60405163dc35bc1360e01b8152600481018590526024810183905260448101829052600090819073__$302363119e071fbaa0549b1c7d65b3ce22$__9063dc35bc1390606401604080518083038186803b15801561152357600080fd5b505af4158015611537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155b9190612863565b60018290556002819055600a549193509150611581906001600160a01b03168888612061565b60019450505050505b92915050565b6007546001600160a01b031633146115ba5760405162461bcd60e51b815260040161062390612a70565b601054600160a81b900460ff16156115e45760405162461bcd60e51b815260040161062390612a11565b6001600160a01b0381166116455760405162461bcd60e51b815260206004820152602260248201527f4b656570657220616464726573732063616e6e6f742062652030206164647265604482015261737360f01b6064820152608401610623565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f402b3f9a8de3e388e7653c7a5892204fe18b579c8c23db19d6e00f1043ceb92190600090a35050565b600b546001600160a01b031633146116c15760405162461bcd60e51b815260040161062390612a39565b601054600160a81b900460ff16156116eb5760405162461bcd60e51b815260040161062390612a11565b6001600160a01b03811661174c5760405162461bcd60e51b815260206004820152602260248201527f4d696e74657220616464726573732063616e6e6f742062652030206164647265604482015261737360f01b6064820152608401610623565b8215806117595750826001145b6117a05760405162461bcd60e51b8152602060048201526018602482015277506f6f6c3a20746f6b656e206f7574206f662072616e676560401b6044820152606401610623565b600583600281106117b3576117b3612be8565b01546040516394bf804d60e01b8152600481018490526001600160a01b038381166024830152909116906394bf804d90604401602060405180830381600087803b15801561180057600080fd5b505af1158015611814573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183891906126aa565b6118725760405162461bcd60e51b815260206004820152600b60248201526a135a5b9d0819985a5b195960aa1b6044820152606401610623565b505050565b600e5460408051634c6afee560e11b815290516000926001600160a01b0316916398d5fdca916004808301926020929190829003018186803b1580156118bc57600080fd5b505afa1580156118d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f491906126f6565b905090565b600b546001600160a01b031633146119235760405162461bcd60e51b815260040161062390612a39565b601054600160a81b900460ff161561194d5760405162461bcd60e51b815260040161062390612a11565b6001600160a01b0383166119a35760405162461bcd60e51b815260206004820181905260248201527f46726f6d20616464726573732063616e6e6f74206265203020616464726573736044820152606401610623565b6001600160a01b0382166119f95760405162461bcd60e51b815260206004820152601e60248201527f546f20616464726573732063616e6e6f742062652030206164647265737300006044820152606401610623565b600a54611872906001600160a01b03168484846120c4565b600354600c54600091611a339164010000000090910463ffffffff1690612af5565b421015905090565b6007546001600160a01b03163314611a655760405162461bcd60e51b815260040161062390612a70565b6010805460ff60a81b1916600160a81b1790556040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a1565b600b546001600160a01b03163314611acd5760405162461bcd60e51b815260040161062390612a39565b601054600160a81b900460ff1615611af75760405162461bcd60e51b815260040161062390612a11565b6001600160a01b038116611b585760405162461bcd60e51b815260206004820152602260248201527f4275726e657220616464726573732063616e6e6f742062652030206164647265604482015261737360f01b6064820152608401610623565b821580611b655750826001145b611bac5760405162461bcd60e51b8152602060048201526018602482015277506f6f6c3a20746f6b656e206f7574206f662072616e676560401b6044820152606401610623565b60058360028110611bbf57611bbf612be8565b0154604051633f34d4cf60e21b8152600481018490526001600160a01b0383811660248301529091169063fcd3533c90604401602060405180830381600087803b158015611c0c57600080fd5b505af1158015611c20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4491906126aa565b6118725760405162461bcd60e51b815260206004820152600b60248201526a109d5c9b8819985a5b195960aa1b6044820152606401610623565b6007546001600160a01b03163314611ca85760405162461bcd60e51b815260040161062390612a70565b601054600160a81b900460ff1615611cd25760405162461bcd60e51b815260040161062390612a11565b6001600160a01b038116611d285760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e742063616e6e6f742062652030206164647265737300000000006044820152606401610623565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f11f35a22548bcd4c3788ab4a7e4fba427a2014f02e5d5e2da9af62212c03183f90600090a35050565b6007546001600160a01b03163314611da45760405162461bcd60e51b815260040161062390612a70565b601054600160a81b900460ff1615611dce5760405162461bcd60e51b815260040161062390612a11565b6001600160a01b038116611e335760405162461bcd60e51b815260206004820152602660248201527f476f7665726e616e636520616464726573732063616e6e6f742062652030206160448201526564647265737360d01b6064820152608401610623565b601080546001600160a81b0319166001600160a01b0380841691909117600160a01b17918290556040519116907f35681f4f23137fb58510a9854f1b6e95f90a2cf0b66d2fce4df74cc0becc82d590600090a250565b600d8054611e9690612b97565b80601f0160208091040260200160405190810160405280929190818152602001828054611ec290612b97565b8015611f0f5780601f10611ee457610100808354040283529160200191611f0f565b820191906000526020600020905b815481529060010190602001808311611ef257829003601f168201915b505050505081565b6008546001600160a01b03163314611f695760405162461bcd60e51b815260206004820152601560248201527436b9b39739b2b73232b9103737ba1035b2b2b832b960591b6044820152606401610623565b601054600160a81b900460ff1615611f935760405162461bcd60e51b815260040161062390612a11565b611f9b611a11565b611fe75760405162461bcd60e51b815260206004820152601d60248201527f55706461746520696e74657276616c206861736e2774207061737365640000006044820152606401610623565b611ff18282612102565b600b60009054906101000a90046001600160a01b03166001600160a01b0316631c536da46040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561204157600080fd5b505af1158015612055573d6000803e3d6000fd5b505042600c5550505050565b6040516001600160a01b03831660248201526044810182905261187290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612301565b6040516001600160a01b03808516602483015283166044820152606481018290526120fc9085906323b872dd60e01b9060840161208d565b50505050565b601054600160a81b900460ff161561212c5760405162461bcd60e51b815260040161062390612a11565b60008213158061213d575060008113155b1561217357604051819083907f27f70c863f1bd3e335bb4d6bf2a31075c861752f0b21a03b816a356035b1dec690600090a35050565b6001546002546040805160c0810182528581526020810185815281830184815260608301868152600480546001600160801b0319608091821b8116828801908152600354600160401b900490921b811660a088019081529751632920706d60e21b815287519381019390935294516024830152925160448201529051606482015290518216608482015292511660a4830152906000908190819073__$302363119e071fbaa0549b1c7d65b3ce22$__9063a481c1b49060c40160606040518083038186803b15801561224457600080fd5b505af4158015612258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061227c91906128bc565b919450925090507f3a4a53e86baa9b577f931e849a3472fd6be844c0916377bc806be891847a5c2b6122ae8784612b2c565b6122b88786612b2c565b6040805192835260208301919091520160405180910390a160028390556001829055600954600a546122f7916001600160a01b03918216911683612061565b5050505050505050565b6000612356826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123d39092919063ffffffff16565b805190915015611872578080602001905181019061237491906126aa565b6118725760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610623565b60606123e284846000856123ec565b90505b9392505050565b60608247101561244d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610623565b6001600160a01b0385163b6124a45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610623565b600080866001600160a01b031685876040516124c0919061293c565b60006040518083038185875af1925050503d80600081146124fd576040519150601f19603f3d011682016040523d82523d6000602084013e612502565b606091505b509150915061251282828661251d565b979650505050505050565b6060831561252c5750816123e5565b82511561253c5782518084602001fd5b8160405162461bcd60e51b815260040161062391906129fe565b82805461256290612b97565b90600052602060002090601f01602090048101928261258457600085556125ca565b82601f1061259d5782800160ff198235161785556125ca565b828001600101855582156125ca579182015b828111156125ca5782358255916020019190600101906125af565b506125d69291506125f8565b5090565b60405180604001604052806002906020820280368337509192915050565b5b808211156125d657600081556001016125f9565b80356001600160a01b038116811461262457600080fd5b919050565b60006020828403121561263b57600080fd5b6123e58261260d565b60008060006060848603121561265957600080fd5b6126628461260d565b92506126706020850161260d565b9150604084013590509250925092565b6000806040838503121561269357600080fd5b61269c8361260d565b946020939093013593505050565b6000602082840312156126bc57600080fd5b815180151581146123e557600080fd5b6000602082840312156126de57600080fd5b81516001600160801b0319811681146123e557600080fd5b60006020828403121561270857600080fd5b5051919050565b6000806040838503121561272257600080fd5b82519150602083015167ffffffffffffffff8082111561274157600080fd5b818501915085601f83011261275557600080fd5b81518181111561276757612767612bfe565b604051601f8201601f19908116603f0116810190838211818310171561278f5761278f612bfe565b816040528281528860208487010111156127a857600080fd5b6127b9836020830160208801612b6b565b80955050505050509250929050565b600080604083850312156127db57600080fd5b50508035926020909101359150565b6000602082840312156127fc57600080fd5b813567ffffffffffffffff81111561281357600080fd5b82016101c081850312156123e557600080fd5b60006020828403121561283857600080fd5b813561ffff811681146123e557600080fd5b60006020828403121561285c57600080fd5b5035919050565b6000806040838503121561287657600080fd5b505080516020909101519092909150565b60008060006060848603121561289c57600080fd5b83359250602084013591506128b36040850161260d565b90509250925092565b6000806000606084860312156128d157600080fd5b8351925060208401519150604084015190509250925092565b6000602082840312156128fc57600080fd5b813563ffffffff811681146123e557600080fd5b60008151808452612928816020860160208601612b6b565b601f01601f19169290920160200192915050565b6000825161294e818460208701612b6b565b9190910192915050565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b60408101818360005b60028110156129c95781516001600160a01b03168352602092830192909101906001016129a1565b50505092915050565b8481526080602082015260006129eb6080830186612910565b6040830194909452506060015292915050565b6020815260006123e56020830184612910565b6020808252600e908201526d141bdbdb081a5cc81c185d5cd95960921b604082015260600190565b6020808252601c908201527f6d73672e73656e646572206e6f7420706f6f6c436f6d6d697474657200000000604082015260600190565b60208082526019908201527f6d73672e73656e646572206e6f7420676f7665726e616e636500000000000000604082015260600190565b6000808335601e19843603018112612abe57600080fd5b83018035915067ffffffffffffffff821115612ad957600080fd5b602001915036819003821315612aee57600080fd5b9250929050565b60008219821115612b0857612b08612bd2565b500190565b6000816000190483118215151615612b2757612b27612bd2565b500290565b60008083128015600160ff1b850184121615612b4a57612b4a612bd2565b6001600160ff1b0384018313811615612b6557612b65612bd2565b50500390565b60005b83811015612b86578181015183820152602001612b6e565b838111156120fc5750506000910152565b600181811c90821680612bab57607f821691505b60208210811415612bcc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212208f7f92ad1025197ce19da2766aaa5919624f92fd895eadbf44d58dfeed43423064736f6c63430008070033";

type LeveragedPoolConstructorParams =
  | [linkLibraryAddresses: LeveragedPoolLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LeveragedPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class LeveragedPool__factory extends ContractFactory {
  constructor(...args: LeveragedPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        LeveragedPool__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: LeveragedPoolLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$302363119e071fbaa0549b1c7d65b3ce22\\$__", "g"),
      linkLibraryAddresses[
        "contracts/tracer/PoolSwapLibrary.sol:PoolSwapLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LeveragedPool> {
    return super.deploy(overrides || {}) as Promise<LeveragedPool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LeveragedPool {
    return super.attach(address) as LeveragedPool;
  }
  connect(signer: Signer): LeveragedPool__factory {
    return super.connect(signer) as LeveragedPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LeveragedPoolInterface {
    return new utils.Interface(_abi) as LeveragedPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LeveragedPool {
    return new Contract(address, _abi, signerOrProvider) as LeveragedPool;
  }
}

export interface LeveragedPoolLibraryAddresses {
  ["contracts/tracer/PoolSwapLibrary.sol:PoolSwapLibrary"]: string;
}
