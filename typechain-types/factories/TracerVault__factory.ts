/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TracerVault, TracerVaultInterface } from "../TracerVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IStrategy",
        name: "_strategy",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_approvalDelay",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "NewStratCandidate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "UpgradeStrat",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "approvalDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "available",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "earn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPricePerFullShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "inCaseTokensGetStuck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "proposeStrat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stratCandidate",
    outputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "proposedTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "strategy",
    outputs: [
      {
        internalType: "contract IStrategy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upgradeStrat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "want",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_shares",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200215538038062002155833981016040819052620000349162000264565b8251839083906200004d90600390602085019062000107565b5080516200006390600490602084019062000107565b505050620000806200007a620000b160201b60201c565b620000b5565b6001600655600980546001600160a01b0319166001600160a01b039590951694909417909355505060805262000349565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011590620002f6565b90600052602060002090601f01602090048101928262000139576000855562000184565b82601f106200015457805160ff191683800117855562000184565b8280016001018555821562000184579182015b828111156200018457825182559160200191906001019062000167565b506200019292915062000196565b5090565b5b8082111562000192576000815560010162000197565b600082601f830112620001bf57600080fd5b81516001600160401b0380821115620001dc57620001dc62000333565b604051601f8301601f19908116603f0116810190828211818310171562000207576200020762000333565b816040528381526020925086838588010111156200022457600080fd5b600091505b8382101562000248578582018301518183018401529082019062000229565b838211156200025a5760008385830101525b9695505050505050565b600080600080608085870312156200027b57600080fd5b84516001600160a01b03811681146200029357600080fd5b60208601519094506001600160401b0380821115620002b157600080fd5b620002bf88838901620001ad565b94506040870151915080821115620002d657600080fd5b50620002e587828801620001ad565b606096909601519497939650505050565b600181811c908216806200030b57607f821691505b602082108114156200032d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b608051611de96200036c600039600081816103f10152610ff70152611de96000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063853828b611610104578063b6b55f25116100a2578063def68a9c11610071578063def68a9c146103d9578063e2d1e75c146103ec578063e668524414610413578063f2fde38b1461041b57600080fd5b8063b6b55f251461037d578063d389800f14610390578063dd62ed3e14610398578063de5f6268146103d157600080fd5b8063a457c2d7116100de578063a457c2d71461033c578063a8c62e761461034f578063a9059cbb14610362578063b69ef8a81461037557600080fd5b8063853828b61461031b5780638da5cb5b1461032357806395d89b411461033457600080fd5b8063395093511161017157806370a082311161014b57806370a08231146102ac578063715018a6146102d557806376dfabb8146102dd57806377c7b8fc1461031357600080fd5b8063395093511461027e57806348a0d754146102915780635b12ff9b1461029957600080fd5b80631f1fcd51116101ad5780631f1fcd511461022757806323b872dd146102475780632e1a7d4d1461025a578063313ce5671461026f57600080fd5b806306fdde03146101d4578063095ea7b3146101f257806318160ddd14610215575b600080fd5b6101dc61042e565b6040516101e99190611c49565b60405180910390f35b610205610200366004611bad565b6104c0565b60405190151581526020016101e9565b6002545b6040519081526020016101e9565b61022f6104d8565b6040516001600160a01b0390911681526020016101e9565b610205610255366004611b6c565b61055a565b61026d610268366004611bfb565b610580565b005b604051601281526020016101e9565b61020561028c366004611bad565b610778565b6102196107b7565b61026d6102a7366004611af9565b61083a565b6102196102ba366004611af9565b6001600160a01b031660009081526020819052604090205490565b61026d6109af565b6007546008546102f4916001600160a01b03169082565b604080516001600160a01b0390931683526020830191909152016101e9565b6102196109e5565b61026d610a22565b6005546001600160a01b031661022f565b6101dc610a3b565b61020561034a366004611bad565b610a4a565b60095461022f906001600160a01b031681565b610205610370366004611bad565b610ae7565b610219610af5565b61026d61038b366004611bfb565b610c07565b61026d610d4d565b6102196103a6366004611b33565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61026d610dde565b61026d6103e7366004611af9565b610e62565b6102197f000000000000000000000000000000000000000000000000000000000000000081565b61026d610f72565b61026d610429366004611af9565b61113d565b60606003805461043d90611d4d565b80601f016020809104026020016040519081016040528092919081815260200182805461046990611d4d565b80156104b65780601f1061048b576101008083540402835291602001916104b6565b820191906000526020600020905b81548152906001019060200180831161049957829003601f168201915b5050505050905090565b6000336104ce8185856111d8565b5060019392505050565b60095460408051631f1fcd5160e01b815290516000926001600160a01b031691631f1fcd51916004808301926020929190829003018186803b15801561051d57600080fd5b505afa158015610531573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105559190611b16565b905090565b6000336105688582856112fc565b61057385858561138e565b60019150505b9392505050565b60006105a661058e60025490565b6105a08461059a610af5565b9061155c565b90611568565b90506105b23383611574565b60006105bc6104d8565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b1580156105fd57600080fd5b505afa158015610611573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106359190611c14565b90508181101561075657600061064b83836116c2565b600954604051632e1a7d4d60e01b8152600481018390529192506001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561069257600080fd5b505af11580156106a6573d6000803e3d6000fd5b5050505060006106b46104d8565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b1580156106f557600080fd5b505afa158015610709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d9190611c14565b9050600061073b82856116c2565b9050828110156107525761074f84826116ce565b94505b5050505b61077333836107636104d8565b6001600160a01b031691906116da565b505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906104ce90829086906107b2908790611cb1565b6111d8565b60006107c16104d8565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b15801561080257600080fd5b505afa158015610816573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105559190611c14565b6005546001600160a01b0316331461086d5760405162461bcd60e51b815260040161086490611c7c565b60405180910390fd5b806001600160a01b031663fbfa77cf6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108a657600080fd5b505afa1580156108ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108de9190611b16565b6001600160a01b0316306001600160a01b0316146109485760405162461bcd60e51b815260206004820152602160248201527f50726f706f73616c206e6f742076616c696420666f722074686973205661756c6044820152601d60fa1b6064820152608401610864565b6040805180820182526001600160a01b038316808252426020928301819052600780546001600160a01b0319168317905560085591519182527f1aae2ec5647db56da2d513de40528ba3565c6057525637050660c4323bbac7df910160405180910390a150565b6005546001600160a01b031633146109d95760405162461bcd60e51b815260040161086490611c7c565b6109e3600061173d565b565b60006109f060025490565b15610a1557610555610a0160025490565b6105a0670de0b6b3a764000061059a610af5565b50670de0b6b3a764000090565b336000908152602081905260409020546109e390610580565b60606004805461043d90611d4d565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015610acf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610864565b610adc82868684036111d8565b506001949350505050565b6000336104ce81858561138e565b6000610555600960009054906101000a90046001600160a01b03166001600160a01b031663722713f76040518163ffffffff1660e01b815260040160206040518083038186803b158015610b4857600080fd5b505afa158015610b5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b809190611c14565b610b886104d8565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b158015610bc957600080fd5b505afa158015610bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c019190611c14565b906116ce565b60026006541415610c5a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610864565b600260065560095460408051632b9ff78560e11b815290516001600160a01b039092169163573fef0a9160048082019260009290919082900301818387803b158015610ca557600080fd5b505af1158015610cb9573d6000803e3d6000fd5b505050506000610cc7610af5565b9050610ce8333084610cd76104d8565b6001600160a01b031692919061178f565b610cf0610d4d565b6000610cfa610af5565b9050610d0681836116c2565b92506000610d1360025490565b610d1e575082610d38565b610d35836105a0610d2e60025490565b879061155c565b90505b610d4233826117c7565b505060016006555050565b6000610d576107b7565b600954909150610d73906001600160a01b0316826107636104d8565b600960009054906101000a90046001600160a01b03166001600160a01b031663d0e30db06040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610dc357600080fd5b505af1158015610dd7573d6000803e3d6000fd5b5050505050565b6109e3610de96104d8565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a082319060240160206040518083038186803b158015610e2a57600080fd5b505afa158015610e3e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038b9190611c14565b6005546001600160a01b03163314610e8c5760405162461bcd60e51b815260040161086490611c7c565b610e946104d8565b6001600160a01b0316816001600160a01b03161415610ede5760405162461bcd60e51b815260206004820152600660248201526510ba37b5b2b760d11b6044820152606401610864565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b158015610f2057600080fd5b505afa158015610f34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f589190611c14565b9050610f6e6001600160a01b03831633836116da565b5050565b6005546001600160a01b03163314610f9c5760405162461bcd60e51b815260040161086490611c7c565b6007546001600160a01b0316610fec5760405162461bcd60e51b81526020600482015260156024820152745468657265206973206e6f2063616e64696461746560581b6044820152606401610864565b600854429061101b907f00000000000000000000000000000000000000000000000000000000000000006116ce565b1061105f5760405162461bcd60e51b815260206004820152601460248201527311195b185e481a185cc81b9bdd081c185cdcd95960621b6044820152606401610864565b6007546040516001600160a01b0390911681527f7f37d440e85aba7fbf641c4bda5ca4ef669a80bffaacde2aa8d9feb1b048c82c9060200160405180910390a1600960009054906101000a90046001600160a01b03166001600160a01b031663fb6177876040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156110ef57600080fd5b505af1158015611103573d6000803e3d6000fd5b505060078054600980546001600160a01b03199081166001600160a01b03841617909155169055505064012a05f2006008556109e3610d4d565b6005546001600160a01b031633146111675760405162461bcd60e51b815260040161086490611c7c565b6001600160a01b0381166111cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610864565b6111d58161173d565b50565b6001600160a01b03831661123a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610864565b6001600160a01b03821661129b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610864565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114611388578181101561137b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610864565b61138884848484036111d8565b50505050565b6001600160a01b0383166113f25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610864565b6001600160a01b0382166114545760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610864565b6001600160a01b038316600090815260208190526040902054818110156114cc5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610864565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611503908490611cb1565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161154f91815260200190565b60405180910390a3611388565b60006105798284611ceb565b60006105798284611cc9565b6001600160a01b0382166115d45760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610864565b6001600160a01b038216600090815260208190526040902054818110156116485760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610864565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611677908490611d0a565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b60006105798284611d0a565b60006105798284611cb1565b6040516001600160a01b03831660248201526044810182905261077390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526118a6565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526113889085906323b872dd60e01b90608401611706565b6001600160a01b03821661181d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610864565b806002600082825461182f9190611cb1565b90915550506001600160a01b0382166000908152602081905260408120805483929061185c908490611cb1565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60006118fb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119789092919063ffffffff16565b80519091501561077357808060200190518101906119199190611bd9565b6107735760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610864565b6060611987848460008561198f565b949350505050565b6060824710156119f05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610864565b6001600160a01b0385163b611a475760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610864565b600080866001600160a01b03168587604051611a639190611c2d565b60006040518083038185875af1925050503d8060008114611aa0576040519150601f19603f3d011682016040523d82523d6000602084013e611aa5565b606091505b5091509150611ab5828286611ac0565b979650505050505050565b60608315611acf575081610579565b825115611adf5782518084602001fd5b8160405162461bcd60e51b81526004016108649190611c49565b600060208284031215611b0b57600080fd5b813561057981611d9e565b600060208284031215611b2857600080fd5b815161057981611d9e565b60008060408385031215611b4657600080fd5b8235611b5181611d9e565b91506020830135611b6181611d9e565b809150509250929050565b600080600060608486031215611b8157600080fd5b8335611b8c81611d9e565b92506020840135611b9c81611d9e565b929592945050506040919091013590565b60008060408385031215611bc057600080fd5b8235611bcb81611d9e565b946020939093013593505050565b600060208284031215611beb57600080fd5b8151801515811461057957600080fd5b600060208284031215611c0d57600080fd5b5035919050565b600060208284031215611c2657600080fd5b5051919050565b60008251611c3f818460208701611d21565b9190910192915050565b6020815260008251806020840152611c68816040850160208701611d21565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611cc457611cc4611d88565b500190565b600082611ce657634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611d0557611d05611d88565b500290565b600082821015611d1c57611d1c611d88565b500390565b60005b83811015611d3c578181015183820152602001611d24565b838111156113885750506000910152565b600181811c90821680611d6157607f821691505b60208210811415611d8257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146111d557600080fdfea2646970667358221220fbc2975a47768e1b7f1ca937257a1f768c28f56e4dc775ee370280853fe07aec64736f6c63430008070033";

type TracerVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TracerVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TracerVault__factory extends ContractFactory {
  constructor(...args: TracerVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _strategy: string,
    _name: string,
    _symbol: string,
    _approvalDelay: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TracerVault> {
    return super.deploy(
      _strategy,
      _name,
      _symbol,
      _approvalDelay,
      overrides || {}
    ) as Promise<TracerVault>;
  }
  getDeployTransaction(
    _strategy: string,
    _name: string,
    _symbol: string,
    _approvalDelay: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _strategy,
      _name,
      _symbol,
      _approvalDelay,
      overrides || {}
    );
  }
  attach(address: string): TracerVault {
    return super.attach(address) as TracerVault;
  }
  connect(signer: Signer): TracerVault__factory {
    return super.connect(signer) as TracerVault__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TracerVaultInterface {
    return new utils.Interface(_abi) as TracerVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TracerVault {
    return new Contract(address, _abi, signerOrProvider) as TracerVault;
  }
}
