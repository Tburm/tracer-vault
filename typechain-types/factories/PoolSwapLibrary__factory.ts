/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PoolSwapLibrary,
  PoolSwapLibraryInterface,
} from "../PoolSwapLibrary";

const _abi = [
  {
    inputs: [],
    name: "MAX_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WAD_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "oldPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "newPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "longBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBalance",
            type: "uint256",
          },
          {
            internalType: "bytes16",
            name: "leverageAmount",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "fee",
            type: "bytes16",
          },
        ],
        internalType: "struct PoolSwapLibrary.PriceChangeData",
        name: "priceChange",
        type: "tuple",
      },
    ],
    name: "calculatePriceChange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "x",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "y",
        type: "bytes16",
      },
    ],
    name: "compareDecimals",
    outputs: [
      {
        internalType: "int8",
        name: "",
        type: "int8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "ratio",
        type: "bytes16",
      },
    ],
    name: "convertDecimalToUInt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "convertUIntToDecimal",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "b",
        type: "int256",
      },
    ],
    name: "divInt",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_wadValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
    ],
    name: "fromWad",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shortBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "longBalance",
        type: "uint256",
      },
    ],
    name: "getBalancesAfterFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "lossMultiplier",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "getLossAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "ratio",
        type: "bytes16",
      },
      {
        internalType: "int8",
        name: "direction",
        type: "int8",
      },
      {
        internalType: "bytes16",
        name: "leverage",
        type: "bytes16",
      },
    ],
    name: "getLossMultiplier",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shadowBalance",
        type: "uint256",
      },
    ],
    name: "getMintAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_denominator",
        type: "uint256",
      },
    ],
    name: "getRatio",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shadowBalance",
        type: "uint256",
      },
    ],
    name: "getWithdrawAmountOnBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPriceTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updateInterval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "frontRunningInterval",
        type: "uint256",
      },
    ],
    name: "isBeforeFrontRunningInterval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "a",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "multiplyDecimalByUInt",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "one",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zero",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x612bc461003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101205760003560e01c8063ab41556f116100ac578063c3ff80911161007b578063c3ff809114610265578063cff7000114610278578063dc35bc131461028b578063debb52df146102b3578063dfdbe4da146102c657600080fd5b8063ab41556f14610224578063aeb64d7d14610237578063bc1b392d1461024a578063bf36f0e91461025257600080fd5b8063664808a8116100f3578063664808a8146101a557806381a799db146101b4578063901717d1146101d7578063a481c1b4146101e3578063a818c0d21461021157600080fd5b80630417cf8e146101255780631842c9d814610140578063202f125714610166578063422051e714610192575b600080fd5b61012d601281565b6040519081526020015b60405180910390f35b61015361014e36600461283c565b6102d9565b60405160009190910b8152602001610137565b6101796101743660046128e4565b6102ee565b6040516001600160801b03199091168152602001610137565b6101796101a03660046128ba565b61030a565b61012d670de0b6b3a764000081565b6101c76101c23660046129de565b61031e565b6040519015158152602001610137565b610179613fff60f01b81565b6101f66101f1366004612906565b610342565b60408051938452602084019290925290820152606001610137565b61012d61021f3660046128ba565b6104a6565b61012d6102323660046129de565b6104cb565b61012d610245366004612821565b61056e565b610179600081565b61012d6102603660046128e4565b610579565b61017961027336600461286f565b61059e565b6101796102863660046128e4565b6105d4565b61029e6102993660046129b2565b6105f8565b60408051928352602083019190915201610137565b61012d6102c13660046129de565b610651565b6101796102d4366004612999565b6106d7565b60006102e583836106e2565b90505b92915050565b60006102e56102fc84610809565b61030584610809565b61089c565b60006102e58361031984610b53565b610bb7565b6000848261032c8587612a10565b6103369190612b35565b1190505b949350505050565b6060810151604082015160808301518351602085015160a08601516000958695869591949093919290919086670de0b6b3a7640000610384610245848961030a565b61038e9190612a28565b90506000670de0b6b3a76400006103a8610245858b61030a565b6103b29190612a28565b90506103be8189612b35565b97506103ca8288612b35565b965060006103d88383612a10565b905060006103e686886102ee565b905060006103f982613fff60f01b6102d9565b9050600061040883838c61059e565b905060008260000b1215801561041e575060008c115b1561044f57600061042f828e6104a6565b905061043b818e612b35565b9c50610447818d612a10565b9b505061048f565b60008260000b128015610462575060008b115b1561048f576000610473828d6104a6565b905061047f818e612a10565b9c5061048b818d612b35565b9b50505b50989e999d50909b50979950505050505050505050565b60006102e56104c66104bd613fff60f01b86610e12565b61031985610b53565b610e24565b60008084116105125760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b60448201526064015b60405180910390fd5b82158061052657506105248286612a10565b155b1561053257508261033a565b60006105526105496105448589612a10565b610b53565b61031987610b53565b90506105646104c68261030587610b53565b9695505050505050565b60006102e882610e24565b600080610587836012612b35565b61059290600a612a8d565b905061033a8185612a28565b600061033a6105cf8361031960008760000b126105c9576105c4613fff60f01b8961089c565b610ea8565b87610ea8565b611058565b6000816105e3575060006102e8565b6102e56105ef84610b53565b61030584610b53565b6000808061060a856102868682612a10565b9050600061061b610245838961030a565b905060006106298288612b35565b90506000610637838a612b35565b6106419088612b35565b9199919850909650505050505050565b60008084116106935760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606401610509565b8215806106a757506106a58286612a10565b155b156106b357508261033a565b60006106c161054985610b53565b90506105646104c682610305610544878b612a10565b60006102e882610b53565b600060016001607f1b03608084901c16617fff60701b81111561070457600080fd5b60016001607f1b03608084901c16617fff60701b81111561072457600080fd5b6001600160801b031985811690851614158061074d5750617fff60701b826001600160801b0316105b61075657600080fd5b6001600160801b03198581169085161415610776576000925050506102e8565b6001607f1b608086811c82118015929187901c9190911015906107c85780156107b957826001600160801b0316846001600160801b0316116107b95760016107bd565b6000195b9450505050506102e8565b80156107db5760019450505050506102e8565b826001600160801b0316846001600160801b0316116107fc576000196107bd565b60019450505050506102e8565b60008161081857506000919050565b600080831361082a578260000361082c565b825b90506000610839826123ab565b90506070811015610852578060700382901b9150610865565b6070811115610865576070810382901c91505b6001600160701b03909116613fff820160701b1790600084121561088d576001607f1b821791505b5060801b92915050565b919050565b6000617fff60f084811c8216919084901c8116908214156108e25780617fff14156108d1575061ffff60ef1b91506102e89050565b505050600160ff1b811682186102e8565b80617fff1415610926576dffffffffffffffffffffffffffff60801b841615610915575061ffff60ef1b91506102e89050565b505050808218600160ff1b166102e8565b600160801b600160ff1b03841661097057600160801b600160ff1b038516610958575061ffff60ef1b91506102e89050565b505050808218600160ff1b16617fff60f01b176102e8565b6001600160701b03608085901c168161098c5760019150610993565b600160701b175b6001600160701b03608087901c16836109d25780156109cd5760006109b7826123ab565b6001955060e20393840160711901939190911b90505b6109dc565b600160701b1760721b5b8181816109eb576109eb612b78565b04905080610a1757600160ff1b87871816610a075760006107bd565b600160ff1b9450505050506102e8565b6001606c1b811015610a2b57610a2b612b4c565b6000600160731b821015610a6a57600160721b821015610a5f57600160711b821015610a58576070610a62565b6071610a62565b60725b60ff16610a73565b610a73826123ab565b905083614071018186011115610a9157617fff945060009150610b24565b83818601613ffc011015610aac576000945060009150610b24565b83818601613f8c011015610af9578385613ffc011115610ad7578385613ffc010382901b9150610af0565b8385613ffc011015610af057613ffc8585030382901c91505b60009450610b24565b6070811115610b0c576070810382901c91505b6001600160701b038216915083818601613f8d010394505b81607086901b888a186001607f1b60801b1660801c6001600160801b0316171760801b955050505050506102e8565b600081610b6257506000919050565b816000610b6e826123ab565b90506070811015610b87578060700382901b9150610b9a565b6070811115610b9a576070810382901c91505b613fff0160701b6001600160701b03919091161760801b92915050565b6000617fff60f084811c8216919084901c811690821415610c565780617fff1415610c35576001600160801b03198581169085161415610c0257505050600160ff1b811682186102e8565b600160ff1b6001600160801b0319868618161415610c25575050508181176102e8565b5061ffff60ef1b91506102e89050565b600160801b600160ff1b0384166108d1575061ffff60ef1b91506102e89050565b80617fff1415610c9257600160801b600160ff1b038516610c81575061ffff60ef1b91506102e89050565b505050600160ff1b821681186102e8565b6001600160701b03608086901c1682610cae5760019250610cb5565b600160701b175b6001600160701b03608086901c1682610cd15760019250610cd8565b600160701b175b9081029081610cf557600160ff1b87871816610a075760006107bd565b928201926000600160e11b831015610d2857600160e01b831015610d2157610d1c836123ab565b610d2b565b60e0610d2b565b60e15b90506140708186011015610d46576000945060009250610de3565b6140e08186011015610d8957614070851015610d6b57846140700383901c9250610d80565b614070851115610d8057614070850383901b92505b60009450610de3565b61c0dd8186011115610da357617fff945060009250610de3565b6070811115610dba576070810383901c9250610dcd565b6070811015610dcd578060700383901b92505b6001600160701b03831692506140df8186010394505b82607086901b888a186001607f1b60801b1660801c6001600160801b0316171760801b955050505050506102e8565b60006102e583600160ff1b8418612449565b6000617fff60f083901c16613fff811015610e425750600092915050565b6001607f1b608084901c10610e5657600080fd5b6140fe811115610e6557600080fd5b600160701b6001600160701b03608085901c161761406f821015610e8f5761406f8290031c610ea1565b61406f821115610ea15761406e1982011b5b9392505050565b60006001607f1b608083901c1115610ec6575061ffff60ef1b919050565b613fff60f01b6001600160801b031983161415610ee557506000919050565b617fff60f083901c811690811415610efe575090919050565b6001600160701b03608084901c1681610f1a5760019150610f21565b600160701b175b80610f3757506001600160f01b03199392505050565b600061406f81613fff8510610f5d5750600f9290921b9160009150613ffe198401610f9c565b60019250600160701b8410610f7f5784613ffe039050600f84901b9350610f9c565b6000610f8a856123ab565b607f8190039590951b9461406d039150505b836001607f1b1415610fd0578215610fb2576001015b6000610fbd826123ab565b60700392839003929190911b905061101e565b600083610fde576000610fe1565b60015b60ff1690505b600160701b82101561101c5793800260ff81901c607f81019190911c94600019939093019260019290921b9082180190610fe7565b505b806001600160701b0316607083901b8461103957600061103f565b6001607f1b5b6001600160801b0316171760801b979650505050505050565b60006001607f1b608083901c90811190617fff60f085901c8116916001600160701b0316908214801561108a57508015155b1561109e575061ffff60ef1b949350505050565b61400d8211156110c457826110b857617fff60f01b6110bb565b60005b95945050505050565b613f7f8210156110dd5750613fff60f01b949350505050565b816110eb57600191506110f2565b600160701b175b613fef82111561110857613fee1982011b61111a565b613fef82101561111a57613fef8290031c5b82801561112b575061203760811b81115b1561113b57506000949350505050565b8215801561115a5750713fffffffffffffffffffffffffffffffffff81115b1561116e5750617fff60f01b949350505050565b6001600160801b0381169060801c83801561118857508115155b15611194579019906001015b6001607f1b828116156111b85770016a09e667f3bcc908b2fb1366ea957d3e0260801c5b6001607e1b8316156111db577001306fe0a31b7152de8d5a46305c85edec0260801c5b6001607d1b8316156111fe577001172b83c7d517adcdf7c8c50eb14a791f0260801c5b6001607c1b8316156112215770010b5586cf9890f6298b92b71842a983630260801c5b6001607b1b831615611244577001059b0d31585743ae7c548eb68ca417fd0260801c5b6001607a1b83161561126757700102c9a3e778060ee6f7caca4f7a29bde80260801c5b600160791b83161561128a5770010163da9fb33356d84a66ae336dcdfa3f0260801c5b600160781b8316156112ad57700100b1afa5abcbed6129ab13ec11dc95430260801c5b600160771b8316156112d05770010058c86da1c09ea1ff19d294cf2f679b0260801c5b600160761b8316156112f3577001002c605e2e8cec506d21bfc89a23a00f0260801c5b600160751b83161561131657700100162f3904051fa128bca9c55c31e5df0260801c5b600160741b831615611339577001000b175effdc76ba38e31671ca9397250260801c5b600160731b83161561135c57700100058ba01fb9f96d6cacd4b180917c3d0260801c5b600160721b83161561137f5770010002c5cc37da9491d0985c348c68e7b30260801c5b600160711b8316156113a2577001000162e525ee054754457d59952920260260801c5b600160701b8316156113c55770010000b17255775c040618bf4a4ade83fc0260801c5b6001606f1b8316156113e8577001000058b91b5bc9ae2eed81e9b7d4cfab0260801c5b6001606e1b83161561140b57700100002c5c89d5ec6ca4d7c8acc017b7c90260801c5b6001606d1b83161561142e5770010000162e43f4f831060e02d839a9d16d0260801c5b6001606c1b83161561145157700100000b1721bcfc99d9f890ea069117630260801c5b6001606b1b8316156114745770010000058b90cf1e6d97f9ca14dbcc16280260801c5b6001606a1b831615611497577001000002c5c863b73f016468f6bac5ca2b0260801c5b600160691b8316156114ba57700100000162e430e5a18f6119e3c02282a50260801c5b600160681b8316156114dd577001000000b1721835514b86e6d96efd1bfe0260801c5b600160671b83161561150057700100000058b90c0b48c6be5df846c5b2ef0260801c5b600160661b8316156115235770010000002c5c8601cc6b9e94213c72737a0260801c5b600160651b831615611546577001000000162e42fff037df38aa2b219f060260801c5b600160641b8316156115695770010000000b17217fba9c739aa5819f44f90260801c5b600160631b83161561158c577001000000058b90bfcdee5acd3c1cedc8230260801c5b600160621b8316156115af57700100000002c5c85fe31f35a6a30da1be500260801c5b600160611b8316156115d25770010000000162e42ff0999ce3541b9fffcf0260801c5b600160601b8316156115f557700100000000b17217f80f4ef5aadda455540260801c5b6001605f1b8316156116185770010000000058b90bfbf8479bd5a81b51ad0260801c5b6001605e1b83161561163b577001000000002c5c85fdf84bd62ae30a74cc0260801c5b6001605d1b83161561165e57700100000000162e42fefb2fed257559bdaa0260801c5b6001605c1b831615611681577001000000000b17217f7d5a7716bba4a9ae0260801c5b6001605b1b8316156116a457700100000000058b90bfbe9ddbac5e109cce0260801c5b6001605a1b8316156116c75770010000000002c5c85fdf4b15de6f17eb0d0260801c5b600160591b8316156116ea577001000000000162e42fefa494f1478fde050260801c5b600160581b83161561170d5770010000000000b17217f7d20cf927c8e94c0260801c5b600160571b831615611730577001000000000058b90bfbe8f71cb4e4b33d0260801c5b600160561b83161561175357700100000000002c5c85fdf477b662b269450260801c5b600160551b8316156117765770010000000000162e42fefa3ae53369388c0260801c5b600160541b83161561179957700100000000000b17217f7d1d351a389d400260801c5b600160531b8316156117bc5770010000000000058b90bfbe8e8b2d3d4ede0260801c5b600160521b8316156117df577001000000000002c5c85fdf4741bea6e77e0260801c5b600160511b83161561180257700100000000000162e42fefa39fe95583c20260801c5b600160501b831615611825577001000000000000b17217f7d1cfb72b45e10260801c5b698000000000000000000083161561184e57700100000000000058b90bfbe8e7cc35c3f00260801c5b69400000000000000000008316156118775770010000000000002c5c85fdf473e242ea380260801c5b69200000000000000000008316156118a0577001000000000000162e42fefa39f02b772c0260801c5b69100000000000000000008316156118c95770010000000000000b17217f7d1cf7d83c1a0260801c5b69080000000000000000008316156118f2577001000000000000058b90bfbe8e7bdcbe2e0260801c5b690400000000000000000083161561191b57700100000000000002c5c85fdf473dea871f0260801c5b69020000000000000000008316156119445770010000000000000162e42fefa39ef44d910260801c5b690100000000000000000083161561196d57700100000000000000b17217f7d1cf79e9490260801c5b688000000000000000008316156119955770010000000000000058b90bfbe8e7bce5440260801c5b684000000000000000008316156119bd577001000000000000002c5c85fdf473de6eca0260801c5b682000000000000000008316156119e557700100000000000000162e42fefa39ef366f0260801c5b68100000000000000000831615611a0d577001000000000000000b17217f7d1cf79afa0260801c5b68080000000000000000831615611a3557700100000000000000058b90bfbe8e7bcd6d0260801c5b68040000000000000000831615611a5d5770010000000000000002c5c85fdf473de6b20260801c5b68020000000000000000831615611a85577001000000000000000162e42fefa39ef3580260801c5b600160401b831615611aa85770010000000000000000b17217f7d1cf79ab0260801c5b678000000000000000831615611acf577001000000000000000058b90bfbe8e7bcd50260801c5b674000000000000000831615611af657700100000000000000002c5c85fdf473de6a0260801c5b672000000000000000831615611b1d5770010000000000000000162e42fefa39ef340260801c5b671000000000000000831615611b4457700100000000000000000b17217f7d1cf7990260801c5b670800000000000000831615611b6b5770010000000000000000058b90bfbe8e7bcc0260801c5b670400000000000000831615611b92577001000000000000000002c5c85fdf473de50260801c5b670200000000000000831615611bb957700100000000000000000162e42fefa39ef20260801c5b670100000000000000831615611be0577001000000000000000000b17217f7d1cf780260801c5b6680000000000000831615611c0657700100000000000000000058b90bfbe8e7bb0260801c5b6640000000000000831615611c2c5770010000000000000000002c5c85fdf473dd0260801c5b6620000000000000831615611c52577001000000000000000000162e42fefa39ee0260801c5b6610000000000000831615611c785770010000000000000000000b17217f7d1cf60260801c5b6608000000000000831615611c9e577001000000000000000000058b90bfbe8e7a0260801c5b6604000000000000831615611cc457700100000000000000000002c5c85fdf473c0260801c5b6602000000000000831615611cea5770010000000000000000000162e42fefa39d0260801c5b6601000000000000831615611d1057700100000000000000000000b17217f7d1ce0260801c5b65800000000000831615611d355770010000000000000000000058b90bfbe8e60260801c5b65400000000000831615611d5a577001000000000000000000002c5c85fdf4720260801c5b65200000000000831615611d7f57700100000000000000000000162e42fefa380260801c5b65100000000000831615611da4577001000000000000000000000b17217f7d1b0260801c5b65080000000000831615611dc957700100000000000000000000058b90bfbe8d0260801c5b65040000000000831615611dee5770010000000000000000000002c5c85fdf460260801c5b65020000000000831615611e13577001000000000000000000000162e42fefa20260801c5b65010000000000831615611e385770010000000000000000000000b17217f7d00260801c5b648000000000831615611e5c577001000000000000000000000058b90bfbe70260801c5b644000000000831615611e8057700100000000000000000000002c5c85fdf30260801c5b642000000000831615611ea45770010000000000000000000000162e42fef90260801c5b641000000000831615611ec857700100000000000000000000000b17217f7c0260801c5b640800000000831615611eec5770010000000000000000000000058b90bfbd0260801c5b640400000000831615611f10577001000000000000000000000002c5c85fde0260801c5b640200000000831615611f3457700100000000000000000000000162e42fee0260801c5b640100000000831615611f58577001000000000000000000000000b17217f60260801c5b6380000000831615611f7b57700100000000000000000000000058b90bfa0260801c5b6340000000831615611f9e5770010000000000000000000000002c5c85fc0260801c5b6320000000831615611fc1577001000000000000000000000000162e42fd0260801c5b6310000000831615611fe45770010000000000000000000000000b17217e0260801c5b6308000000831615612007577001000000000000000000000000058b90be0260801c5b630400000083161561202a57700100000000000000000000000002c5c85e0260801c5b630200000083161561204d5770010000000000000000000000000162e42e0260801c5b630100000083161561207057700100000000000000000000000000b172160260801c5b628000008316156120925770010000000000000000000000000058b90a0260801c5b624000008316156120b4577001000000000000000000000000002c5c840260801c5b622000008316156120d657700100000000000000000000000000162e410260801c5b621000008316156120f8577001000000000000000000000000000b17200260801c5b6208000083161561211a57700100000000000000000000000000058b8f0260801c5b6204000083161561213c5770010000000000000000000000000002c5c70260801c5b6202000083161561215e577001000000000000000000000000000162e30260801c5b620100008316156121805770010000000000000000000000000000b1710260801c5b6180008316156121a1577001000000000000000000000000000058b80260801c5b6140008316156121c257700100000000000000000000000000002c5b0260801c5b6120008316156121e35770010000000000000000000000000000162d0260801c5b61100083161561220457700100000000000000000000000000000b160260801c5b6108008316156122255770010000000000000000000000000000058a0260801c5b610400831615612246577001000000000000000000000000000002c40260801c5b610200831615612267577001000000000000000000000000000001610260801c5b610100831615612288577001000000000000000000000000000000b00260801c5b60808316156122a8577001000000000000000000000000000000570260801c5b60408316156122c85770010000000000000000000000000000002b0260801c5b60208316156122e8577001000000000000000000000000000000150260801c5b60108316156123085770010000000000000000000000000000000a0260801c5b6008831615612328577001000000000000000000000000000000040260801c5b6004831615612348577001000000000000000000000000000000010260801c5b8461236957600f81901c6001600160701b03169050613fff82019150612398565b613ffe821161238e57600f81901c6001600160701b0316905081613fff039150612398565b600091613fee19011c5b60709190911b1760801b95945050505050565b60008082116123b957600080fd5b6000600160801b83106123ce57608092831c92015b600160401b83106123e157604092831c92015b64010000000083106123f557602092831c92015b62010000831061240757601092831c92015b610100831061241857600892831c92015b6010831061242857600492831c92015b6004831061243857600292831c92015b600283106102e85760010192915050565b6000617fff60f084811c8216919084901c8116908214156124975780617fff141561248d576001600160801b03198581169085161415610c255784925050506102e8565b84925050506102e8565b80617fff14156124ab5783925050506102e8565b6001607f1b608086901c90811015906001600160701b0316836124d157600193506124d8565b600160701b175b6001607f1b608087901c90811015906001600160701b0316846124fe5760019450612505565b600160701b175b82612535576001600160801b03198816600160ff1b146125255787612528565b60005b96505050505050506102e8565b80612555576001600160801b03198916600160ff1b146125255788612528565b848603841515831515141561266057607081131561257c57899750505050505050506102e8565b600081131561258e5790811c906125bd565b606f198112156125a757889750505050505050506102e8565b60008112156125bd578060000384901c93508596505b92810192600160711b84106125d8576001968701969390931c925b86617fff141561260a57846125f257617fff60f01b6125fc565b6001600160f01b03195b9750505050505050506102e8565b600160701b84101561261f576000965061262c565b6001600160701b03841693505b83607088901b8661263e576000612644565b6001607f1b5b6001600160801b0316171760801b9750505050505050506102e8565b600081131561267b57600184901b9350600187039650612692565b600081121561269257600182901b91506001860396505b60708113156126a457600191506126f1565b60018113156126c1576001810360018303901c60010191506126f1565b606f198112156126d457600193506126f1565b6000198112156126f1576001816000030360018503901c60010193505b81841061270257818403935061270b565b83820393508294505b836127215750600096506102e895505050505050565b600061272c856123ab565b9050806071141561275257600185901c6001600160701b031694506001880197506127a1565b607081101561279457607081900380891115612781578086901b6001600160701b03169550808903985061278e565b600098600019019590951b945b506127a1565b6001600160701b03851694505b87617fff14156127d457856127bb57617fff60f01b6127c5565b6001600160f01b03195b985050505050505050506102e8565b84607089901b876127e65760006127ec565b6001607f1b5b6001600160801b0316171760801b985050505050505050506102e8565b80356001600160801b03198116811461089757600080fd5b60006020828403121561283357600080fd5b6102e582612809565b6000806040838503121561284f57600080fd5b61285883612809565b915061286660208401612809565b90509250929050565b60008060006060848603121561288457600080fd5b61288d84612809565b925060208401358060000b81146128a357600080fd5b91506128b160408501612809565b90509250925092565b600080604083850312156128cd57600080fd5b6128d683612809565b946020939093013593505050565b600080604083850312156128f757600080fd5b50508035926020909101359150565b600060c0828403121561291857600080fd5b60405160c0810181811067ffffffffffffffff8211171561294957634e487b7160e01b600052604160045260246000fd5b80604052508235815260208301356020820152604083013560408201526060830135606082015261297c60808401612809565b608082015261298d60a08401612809565b60a08201529392505050565b6000602082840312156129ab57600080fd5b5035919050565b6000806000606084860312156129c757600080fd5b505081359360208301359350604090920135919050565b600080600080608085870312156129f457600080fd5b5050823594602084013594506040840135936060013592509050565b60008219821115612a2357612a23612b62565b500190565b600082612a4557634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115612a85578160001904821115612a6b57612a6b612b62565b80851615612a7857918102915b93841c9390800290612a4f565b509250929050565b60006102e58383600082612aa3575060016102e8565b81612ab0575060006102e8565b8160018114612ac65760028114612ad057612aec565b60019150506102e8565b60ff841115612ae157612ae1612b62565b50506001821b6102e8565b5060208310610133831016604e8410600b8410161715612b0f575081810a6102e8565b612b198383612a4a565b8060001904821115612b2d57612b2d612b62565b029392505050565b600082821015612b4757612b47612b62565b500390565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea26469706673582212208673592d832558fc92f91c6ce5fc5dc30abc06c1dab4911601284943f335ab9f64736f6c63430008070033";

type PoolSwapLibraryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolSwapLibraryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolSwapLibrary__factory extends ContractFactory {
  constructor(...args: PoolSwapLibraryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PoolSwapLibrary> {
    return super.deploy(overrides || {}) as Promise<PoolSwapLibrary>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PoolSwapLibrary {
    return super.attach(address) as PoolSwapLibrary;
  }
  connect(signer: Signer): PoolSwapLibrary__factory {
    return super.connect(signer) as PoolSwapLibrary__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolSwapLibraryInterface {
    return new utils.Interface(_abi) as PoolSwapLibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolSwapLibrary {
    return new Contract(address, _abi, signerOrProvider) as PoolSwapLibrary;
  }
}
