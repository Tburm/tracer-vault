/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StrategySkewFarming,
  StrategySkewFarmingInterface,
} from "../StrategySkewFarming";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_want",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_unirouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strategist",
        type: "address",
      },
      {
        internalType: "address",
        name: "_beefyFeeRecipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "harvester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wantHarvested",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "StratHarvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_CALL_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STRATEGIST_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WITHDRAWAL_FEE_CAP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WITHDRAWAL_MAX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfWant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beefyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beefyFeeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beforeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "callFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chef",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasprice",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "callFeeRecipient",
        type: "address",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestOnDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastHarvest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpToken0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpToken1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "managerHarvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "native",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "output",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "outputToLp0Route",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "outputToLp1Route",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "outputToNativeRoute",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "panic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingRewardsFunctionName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "retireStrat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beefyFeeRecipient",
        type: "address",
      },
    ],
    name: "setBeefyFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setCallFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_harvestOnDeposit",
        type: "bool",
      },
    ],
    name: "setHarvestOnDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
    ],
    name: "setKeeper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_shouldGasThrottle",
        type: "bool",
      },
    ],
    name: "setShouldGasThrottle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategist",
        type: "address",
      },
    ],
    name: "setStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_unirouter",
        type: "address",
      },
    ],
    name: "setUnirouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setWithdrawalFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldGasThrottle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "strategist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unirouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "want",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawalFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600a600655606f60078190556200001f60706103e862000209565b6200002b919062000209565b600855600980546001600160a81b03191674a43509661141f254f54d9a326e8ec851a0b95307011790553480156200006257600080fd5b5060405162001d0338038062001d03833981016040819052620000859162000188565b828285878462000095336200011b565b6000805460ff60a01b19169055600180546001600160a01b03199081166001600160a01b03978816179091556002805482169587169590951790945560038054851693861693909317909255600480548416918516919091179055600580548316918416919091179055600c80549091169188169190911790555050505050506200022f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200018357600080fd5b919050565b60008060008060008060c08789031215620001a257600080fd5b620001ad876200016b565b9550620001bd602088016200016b565b9450620001cd604088016200016b565b9350620001dd606088016200016b565b9250620001ed608088016200016b565b9150620001fd60a088016200016b565b90509295509295509295565b6000828210156200022a57634e487b7160e01b600052601160045260246000fd5b500390565b611ac4806200023f6000396000f3fe608060405234801561001057600080fd5b50600436106103425760003560e01c80638456cb59116101b8578063c1a3d44c11610104578063f1a392da116100a2578063fad4675e1161007c578063fad4675e14610649578063fb6177871461065c578063fbfa77cf14610664578063fd63a8871461067757600080fd5b8063f1a392da1461061a578063f20eaeb814610623578063f2fde38b1461063657600080fd5b8063d3102589116100de578063d3102589146105ee578063d801d946146105f7578063d92f3d73146105ff578063dfbdc4371461061257600080fd5b8063c1a3d44c146105cb578063c7b9d530146105d3578063d0e30db0146105e657600080fd5b806390321e1a11610171578063ac1e50251161014b578063ac1e502514610589578063aced16611461059c578063bc063e1a146105af578063be12a978146105b857600080fd5b806390321e1a146105605780639f8b5da114610569578063a68833e51461057657600080fd5b80638456cb591461050b578063877562b6146105135780638912cb8b146105265780638bc7e8c4146105335780638da5cb5b1461053c5780638e1454591461054d57600080fd5b80633e0dc34e116102925780635ee167c011610230578063715018a61161020a578063715018a6146104e0578063722713f7146104e8578063748747e6146104f05780637d38ca651461050357600080fd5b80635ee167c0146104a25780636817031b146104b55780636ec232d3146104c857600080fd5b80634700d3051161026c5780634700d3051461046b57806354518b1a14610473578063573fef0a1461047c5780635c975abb1461048457600080fd5b80633e0dc34e146104525780633f4ba83a1461045b5780634641257d1461046357600080fd5b80631fe4a686116102ff578063277e5cfd116102d9578063277e5cfd1461040f5780632ad5a53f146104245780632e1a7d4d1461042c57806336c6cf211461043f57600080fd5b80631fe4a686146103d6578063257ae0de146103e957806326465826146103fc57600080fd5b80630e5c011e146103475780630e8fbb5a1461035c578063115880861461036f57806311b0b42d146103855780631f1fcd51146103b05780631fc8bc5d146103c3575b600080fd5b61035a61035536600461180a565b61068a565b005b61035a61036a366004611833565b61078c565b60005b6040519081526020015b60405180910390f35b600a54610398906001600160a01b031681565b6040516001600160a01b03909116815260200161037c565b600c54610398906001600160a01b031681565b600f54610398906001600160a01b031681565b600254610398906001600160a01b031681565b600354610398906001600160a01b031681565b61035a61040a36600461186d565b6107f8565b610417610894565b60405161037c91906118bb565b610372606f81565b61035a61043a36600461186d565b610922565b61039861044d36600461186d565b610b13565b61037260105481565b61035a610b3d565b61035a610b8e565b61035a610c88565b61037261271081565b61035a610ccf565b600054600160a01b900460ff165b604051901515815260200161037c565b600d54610398906001600160a01b031681565b61035a6104c336600461180a565b610d04565b6009546103989061010090046001600160a01b031681565b61035a610d50565b610372610d84565b61035a6104fe36600461180a565b610d9d565b610372607081565b61035a610dfe565b600e54610398906001600160a01b031681565b6011546104929060ff1681565b61037260065481565b6000546001600160a01b0316610398565b600554610398906001600160a01b031681565b61037260075481565b6009546104929060ff1681565b61035a61058436600461180a565b610e45565b61035a61059736600461186d565b610e91565b600154610398906001600160a01b031681565b6103726103e881565b6103986105c636600461186d565b610f0f565b610372610f1f565b61035a6105e136600461180a565b610f9b565b61035a611005565b61037260085481565b61035a6110f0565b61035a61060d36600461180a565b61112f565b610372603281565b61037260125481565b600b54610398906001600160a01b031681565b61035a61064436600461180a565b61117b565b61035a610657366004611833565b611213565b61035a611265565b600454610398906001600160a01b031681565b61039861068536600461186d565b61139d565b60095460ff1680156106ac575060095461010090046001600160a01b03163b15155b1561078057600960019054906101000a90046001600160a01b03166001600160a01b0316633de39c116040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561070157600080fd5b505af1158015610715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107399190611886565b3a11156107805760405162461bcd60e51b815260206004820152601060248201526f67617320697320746f6f20686967682160801b60448201526064015b60405180910390fd5b610789816113ad565b50565b6000546001600160a01b03163314806107af57506001546001600160a01b031633145b6107cb5760405162461bcd60e51b81526004016107779061196d565b6011805460ff191682151590811790915560ff16156107ee576107896000610e91565b610789600a610e91565b6000546001600160a01b031633148061081b57506001546001600160a01b031633145b6108375760405162461bcd60e51b81526004016107779061196d565b606f8111156108715760405162461bcd60e51b8152600401610777906020808252600490820152630216361760e41b604082015260600190565b60078190558061088460706103e86119e8565b61088e91906119e8565b60085550565b601380546108a190611a2f565b80601f01602080910402602001604051908101604052809291908181526020018280546108cd90611a2f565b801561091a5780601f106108ef5761010080835404028352916020019161091a565b820191906000526020600020905b8154815290600101906020018083116108fd57829003601f168201915b505050505081565b6004546001600160a01b0316331461094c5760405162461bcd60e51b815260040161077790611918565b600c546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561099057600080fd5b505afa1580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c89190611886565b905081811015610a5057600c546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610a1557600080fd5b505afa158015610a29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4d9190611886565b90505b81811115610a5b5750805b6000546001600160a01b03163214801590610a805750600054600160a01b900460ff16155b15610ab8576000610aa8612710610aa2600654856113d790919063ffffffff16565b906113ea565b9050610ab482826113f6565b9150505b600454600c54610ad5916001600160a01b03918216911683611402565b7f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d610afe610d84565b60405190815260200160405180910390a15050565b60158181548110610b2357600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b0316331480610b6057506001546001600160a01b031633145b610b7c5760405162461bcd60e51b81526004016107779061196d565b610b84611459565b610b8c611005565b565b60095460ff168015610bb0575060095461010090046001600160a01b03163b15155b15610c7f57600960019054906101000a90046001600160a01b03166001600160a01b0316633de39c116040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610c0557600080fd5b505af1158015610c19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3d9190611886565b3a1115610c7f5760405162461bcd60e51b815260206004820152601060248201526f67617320697320746f6f20686967682160801b6044820152606401610777565b610b8c326113ad565b6000546001600160a01b0316331480610cab57506001546001600160a01b031633145b610cc75760405162461bcd60e51b81526004016107779061196d565b610b8c610dfe565b60115460ff1615610b8c576004546001600160a01b03163314610c7f5760405162461bcd60e51b815260040161077790611918565b6000546001600160a01b03163314610d2e5760405162461bcd60e51b815260040161077790611938565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610d7a5760405162461bcd60e51b815260040161077790611938565b610b8c60006114f6565b6000610d9881610d92610f1f565b90611546565b905090565b6000546001600160a01b0316331480610dc057506001546001600160a01b031633145b610ddc5760405162461bcd60e51b81526004016107779061196d565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331480610e2157506001546001600160a01b031633145b610e3d5760405162461bcd60e51b81526004016107779061196d565b610b8c611552565b6000546001600160a01b03163314610e6f5760405162461bcd60e51b815260040161077790611938565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331480610eb457506001546001600160a01b031633145b610ed05760405162461bcd60e51b81526004016107779061196d565b6032811115610f0a5760405162461bcd60e51b8152600401610777906020808252600490820152630216361760e41b604082015260600190565b600655565b60148181548110610b2357600080fd5b600c546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610f6357600080fd5b505afa158015610f77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d989190611886565b6002546001600160a01b03163314610fe35760405162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b6044820152606401610777565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600054600160a01b900460ff161561102f5760405162461bcd60e51b8152600401610777906118ee565b600c546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561107357600080fd5b505afa158015611087573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ab9190611886565b90508015610789577f4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e384266110dc610d84565b60405190815260200160405180910390a150565b6000546001600160a01b031633148061111357506001546001600160a01b031633145b610c7f5760405162461bcd60e51b81526004016107779061196d565b6000546001600160a01b031633146111595760405162461bcd60e51b815260040161077790611938565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146111a55760405162461bcd60e51b815260040161077790611938565b6001600160a01b03811661120a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610777565b610789816114f6565b6000546001600160a01b031633148061123657506001546001600160a01b031633145b6112525760405162461bcd60e51b81526004016107779061196d565b6009805460ff1916911515919091179055565b6004546001600160a01b0316331461128f5760405162461bcd60e51b815260040161077790611918565b600c546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156112d357600080fd5b505afa1580156112e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130b9190611886565b600c546004805460405163a9059cbb60e01b81526001600160a01b03918216928101929092526024820184905292935091169063a9059cbb90604401602060405180830381600087803b15801561136157600080fd5b505af1158015611375573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113999190611850565b5050565b60168181548110610b2357600080fd5b600054600160a01b900460ff16156107895760405162461bcd60e51b8152600401610777906118ee565b60006113e382846119c9565b9392505050565b60006113e382846119a7565b60006113e382846119e8565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526114549084906115b7565b505050565b600054600160a01b900460ff166114a95760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610777565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006113e3828461198f565b600054600160a01b900460ff161561157c5760405162461bcd60e51b8152600401610777906118ee565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114d93390565b600061160c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116899092919063ffffffff16565b805190915015611454578080602001905181019061162a9190611850565b6114545760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610777565b606061169884846000856116a0565b949350505050565b6060824710156117015760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610777565b6001600160a01b0385163b6117585760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610777565b600080866001600160a01b03168587604051611774919061189f565b60006040518083038185875af1925050503d80600081146117b1576040519150601f19603f3d011682016040523d82523d6000602084013e6117b6565b606091505b50915091506117c68282866117d1565b979650505050505050565b606083156117e05750816113e3565b8251156117f05782518084602001fd5b8160405162461bcd60e51b815260040161077791906118bb565b60006020828403121561181c57600080fd5b81356001600160a01b03811681146113e357600080fd5b60006020828403121561184557600080fd5b81356113e381611a80565b60006020828403121561186257600080fd5b81516113e381611a80565b60006020828403121561187f57600080fd5b5035919050565b60006020828403121561189857600080fd5b5051919050565b600082516118b18184602087016119ff565b9190910192915050565b60208152600082518060208401526118da8160408501602087016119ff565b601f01601f19169190910160400192915050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b602080825260069082015265085d985d5b1d60d21b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526008908201526710b6b0b730b3b2b960c11b604082015260600190565b600082198211156119a2576119a2611a6a565b500190565b6000826119c457634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156119e3576119e3611a6a565b500290565b6000828210156119fa576119fa611a6a565b500390565b60005b83811015611a1a578181015183820152602001611a02565b83811115611a29576000848401525b50505050565b600181811c90821680611a4357607f821691505b60208210811415611a6457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b801515811461078957600080fdfea26469706673582212208266ae0df17a4880de5bdbd45e07270f5a894aeb1c48a7014d41a01c88812a9464736f6c63430008070033";

type StrategySkewFarmingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategySkewFarmingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategySkewFarming__factory extends ContractFactory {
  constructor(...args: StrategySkewFarmingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _want: string,
    _vault: string,
    _unirouter: string,
    _keeper: string,
    _strategist: string,
    _beefyFeeRecipient: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StrategySkewFarming> {
    return super.deploy(
      _want,
      _vault,
      _unirouter,
      _keeper,
      _strategist,
      _beefyFeeRecipient,
      overrides || {}
    ) as Promise<StrategySkewFarming>;
  }
  getDeployTransaction(
    _want: string,
    _vault: string,
    _unirouter: string,
    _keeper: string,
    _strategist: string,
    _beefyFeeRecipient: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _want,
      _vault,
      _unirouter,
      _keeper,
      _strategist,
      _beefyFeeRecipient,
      overrides || {}
    );
  }
  attach(address: string): StrategySkewFarming {
    return super.attach(address) as StrategySkewFarming;
  }
  connect(signer: Signer): StrategySkewFarming__factory {
    return super.connect(signer) as StrategySkewFarming__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategySkewFarmingInterface {
    return new utils.Interface(_abi) as StrategySkewFarmingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StrategySkewFarming {
    return new Contract(address, _abi, signerOrProvider) as StrategySkewFarming;
  }
}
